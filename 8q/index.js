// -------------------------------------------------------------
// –í—Ö–æ–¥: –ú–∞—Å—Å–∏–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
// ["—á","–æ","–ª","–∞"]
// –í—ã–≤–æ–¥: —Å—Ç—Ä–æ–∫–∞ —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –∑–∞–ø—è—Ç—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –º–∞—Å—Å–∏–≤–∞ –≤ —Ç–æ–º –∂–µ –ø–æ—Ä—è–¥–∫–µ.
// "—á,–æ,–ª,–∞"
// –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –µ—Å–ª–∏ —ç—Ç–æ –∫–∞–∂–µ—Ç—Å—è –≤–∞–º —Å–ª–∏—à–∫–æ–º –ø—Ä–æ—Å—Ç—ã–º, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å.
// –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2: –≤—Ö–æ–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –º–æ–≥—É—Ç –±—ã—Ç—å: –ª–æ–≥–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∏–≤, –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤, –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤, –º–∞—Å—Å–∏–≤ —á–∏—Å–ª–æ–≤—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤... üòï
// -------------------------------------------------------------

// const array = [1, 2, 3, 4, 5]

// function printArray(array) {
//  return array.join()

// }
// console.log(printArray(array));

// -------------------------------------------------------------
// –°–º–æ–∂–µ—Ç–µ –ª–∏ –≤—ã –Ω–∞–π—Ç–∏ –∏–≥–æ–ª–∫—É –≤ —Å—Ç–æ–≥–µ —Å–µ–Ω–∞?
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é findNeedle(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç array–ø–æ–ª–Ω—ã–π –º—É—Å–æ—Ä, –Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–¥–∏–Ω"needle"
// –ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞–π–¥–µ—Ç –∏–≥–ª—É, –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (–≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏), –∫–æ—Ç–æ—Ä–æ–µ –≥–ª–∞—Å–∏—Ç:
// "found the needle at position "–ø–ª—é—Å index–æ–Ω –Ω–∞—à–µ–ª –∏–≥–æ–ª–∫—É, —Ç–∞–∫ —á—Ç–æ:
// -------------------------------------------------------------

// const arr = ['3', '123124234', 'needle', 'world', 'hay', 2, '3'];

// const findNeedle = (array) => {
//   let result = '';
//   for (let i = 0; i < array.length; i++) {
//     if (array[i] === "needle") {
//       result = `found the needle at position ${i + 1}`;
//     }
//   }
//   return result;
// };

// console.log(findNeedle(arr));

// -------------------------------------------------------------
// –í–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫. –í—ã –¥–æ–ª–∂–Ω—ã –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (—Å —É—á–µ—Ç–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞ –∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–Ω–∞—á–µ–Ω–∏–π ASCII —Å–∏–º–≤–æ–ª–æ–≤), –∞ –∑–∞—Ç–µ–º –≤–µ—Ä–Ω—É—Ç—å –ø–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
// –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å "***"–º–µ–∂–¥—É –∫–∞–∂–¥–æ–π –∏–∑ –µ–µ –±—É–∫–≤.
// –ù–µ —Å–ª–µ–¥—É–µ—Ç —É–¥–∞–ª—è—Ç—å –∏–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑/–≤ –º–∞—Å—Å–∏–≤.
// –ø–µ—Ä–µ—á–∏—Å–ª–∏ –∫–∞–∫–∏–µ –º–µ—Ç–æ–¥—ã –∏ –ø–æ–¥—Ö–æ–¥—ã —Ç—É—Ç –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è? –Ω–µ –ø–∏—à–∏ –≥–æ—Ç–æ–≤—ã–π –∫–æ–¥
// -------------------------------------------------------------

// const s = ["bitcoin", "take", "over", "the", "world", "maybe", "who", "knows", "perhaps"];

// function twoSort(s) {
//   return s.sort()[0].split('').join('***')
// }

// console.log(twoSort(s));

// -------------------------------------------------------------
// –í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ—Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–Ω–æ—Å—Ç–∏ –º–µ–∂–¥—É –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–∏ –≤ –º–∞—Å—Å–∏–≤–µ –≤ –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è.
// –ü—Ä–∏–º–µ—Ä
// [2, 1, 10]  -->  9
// –í –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è:[10, 2, 1]
// –°—É–º–º–∞:(10 - 2) + (2 - 1) = 8 + 1 = 9
// –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç –∏–ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 0( Nothing–≤ Haskell, None–≤ Rust).

// const arr = [1, 2, 10];
// function sumOfDifferences(arr) {
//   arr.sort((a, b) => b - a)

//   let res = 0;
//   for (let i = 0; i < arr.length - 1; i++) {
//     res += arr[i] - arr[i + 1]
//   }
//   return res
// }

// console.log(sumOfDifferences(arr));

// -------------------------------------------------------------

// –í—ã –≤–µ–¥–µ—Ç–µ —Å—ã–Ω–∞ –≤ –ª–µ—Å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –æ–±–µ–∑—å—è–Ω. –í—ã –∑–Ω–∞–µ—Ç–µ, —á—Ç–æ –∏—Ö —Ç–∞–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (n), –Ω–æ –≤–∞—à —Å—ã–Ω —Å–ª–∏—à–∫–æ–º –º–∞–ª, —á—Ç–æ–±—ã –ø—Ä–æ—Å—Ç–æ –æ—Ü–µ–Ω–∏—Ç—å –ø–æ–ª–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –µ–º—É –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –Ω–∞—á–∏–Ω–∞—Ç—å —Å—á–∏—Ç–∞—Ç—å –∏—Ö —Å 1.

// –ö–∞–∫ —Ö–æ—Ä–æ—à–∏–π —Ä–æ–¥–∏—Ç–µ–ª—å, –≤—ã –±—É–¥–µ—Ç–µ —Å–∏–¥–µ—Ç—å –∏ —Å—á–∏—Ç–∞—Ç—å –≤–º–µ—Å—Ç–µ —Å –Ω–∏–º. –î–∞–Ω–æ —á–∏—Å–ª–æ (n), –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –º–∞—Å—Å–∏–≤ –≤—Å–µ–º–∏ —á–∏—Å–ª–∞–º–∏ –¥–æ —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ, –Ω–æ –∏—Å–∫–ª—é—á–∞—è –Ω–æ–ª—å.

// function monkeyCount(n) {
//   const a = [];
//   for (let i = 0; i < n; i++) {
//     a.push(i + 1);
//   }
//   return a;
// }

// -------------------------------------------------------------
// –ó–∞–¥–∞—á–∞ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç–µ —Å—É–º–º—É –≤—Å–µ—Ö –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü. –ü—Ä–∏–º–µ—Ä [1, -4, 7, 12] => 1 + 7 + 12 = 20 1+7+12=20 –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –ï—Å–ª–∏ —Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—á–µ–≥–æ, —Å—É–º–º–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–≤–Ω–∞ 0.

// const array = [1, -4, 7, 12];

// function positiveSum(arr) {
//   let sub = 0;

//   for (let i = 0; i < arr.length; i++) {
//     if (arr[i] > 0) {
//       sub += arr[i]
//     }
//   }
//   return sub

// }
// console.log(positiveSum(array))

// -------------------------------------------------------------
// –î–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞—Ç—á–∞:
// –ï—Å–ª–∏ x > y ‚Üí –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∏–≥—Ä–∞–ª–∞ ‚Üí 3 –æ—á–∫–∞.
// –ï—Å–ª–∏ x < y ‚Üí –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–∏–≥—Ä–∞–ª–∞ ‚Üí 0 –æ—á–∫–æ–≤.
// –ï—Å–ª–∏ x == y ‚Üí –Ω–∏—á—å—è ‚Üí 1 –æ—á–∫–æ.

// const games = ["1:0","2:0","3:0","4:0","2:1","1:3","1:4","2:3","2:4","3:4"]

// function points(games) {
//   let summ = 0

//   for (let i = 0; i < games.length; i++) {
//     const [x, y] = games[i].split(':').map(Number)
//     if (x > y) {
//       summ += 3;
//     } else if (x == y) {
//       summ += 1
//     } else if (x < y) { 
//       summ += 0
//     } 
//   }
//   return summ
// }
// console.log(points(games));

// -------------------------------------------------------------

const a = [1, 2, 3, 4, 5]

const b = [1, 2, 3, 4, 5]


function arrayPlusArray(arr1, arr2) {
  const sum = arr1.concat(arr2).reduce((acc, value) => acc + value, 0)
  return sum
}

console.log(arrayPlusArray(a, b));