// You will be given an array of numbers. You have to sort the odd numbers in ascending order while leaving the even numbers at their original positions.
// –í–∞–º –±—É–¥–µ—Ç –¥–∞–Ω –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª. –í–∞–º –Ω—É–∂–Ω–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è, –æ—Å—Ç–∞–≤–∏–≤ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –Ω–∞ —Å–≤–æ–∏—Ö –∏—Å—Ö–æ–¥–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏—è—Ö.
// [7, 1]  =>  [1, 7]
// [5, 8, 6, 3, 4]  =>  [3, 8, 6, 5, 4]
// [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]  =>  [1, 8, 3, 6, 5, 4, 7, 2, 9, 0]

// ‚úÖ
// // –§–∏–ª—å—Ç—Ä—É–µ–º –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ—á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞
// const oddNumbers = array.filter(num => num % 2 !== 0).sort((a, b) => a - b);

// // –í—Å—Ç–∞–≤–ª—è–µ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–µ—á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –æ–±—Ä–∞—Ç–Ω–æ –≤ –º–∞—Å—Å–∏–≤
// let oddIndex = 0;
// return array.map(num => {
//     if (num % 2 !== 0) {
//         return oddNumbers[oddIndex++];
//     }
//     return num; // –ß–µ—Ç–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –Ω–∞ –º–µ—Å—Ç–µ
// });

// -------------------------------------------------------------
// üíö Review JavaScript Fundamentals by Building a Gradebook App üíö
// -------------------------------------------------------------

// –£—á–∏—Ç–µ–ª—å –∑–∞–∫–æ–Ω—á–∏–ª –æ—Ü–µ–Ω–∏–≤–∞—Ç—å —Ç–µ—Å—Ç—ã —Å–≤–æ–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤ –∏ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –≤–∞—à–µ–π –ø–æ–º–æ—â–∏, —á—Ç–æ–±—ã –≤—ã—á–∏—Å–ª–∏—Ç—å —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –ø–æ –∫–ª–∞—Å—Å—É.

// –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é getAverage, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ü–µ–Ω–æ–∫ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª.

// –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –ø—É—Ç–µ–º —Å–ª–æ–∂–µ–Ω–∏—è –≤—Å–µ—Ö –æ—Ü–µ–Ω–æ–∫ –∏ –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ü–µ–Ω–æ–∫.

// –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞
// average = sum of all scores / total number of scores
// –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π –∫–æ–¥, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤—ã–∑–æ–≤–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π.

// –°–æ–≤–µ—Ç—ã

// –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–∏–∫–ª –¥–ª—è –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø–æ –º–∞—Å—Å–∏–≤—É –æ—Ü–µ–Ω–æ–∫ –∏ —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –æ—Ü–µ–Ω–æ–∫.
// –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ length, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ü–µ–Ω–æ–∫.

// ‚úÖ
// function getAverage(scores) {
//   let sum = 0;
//   let sumItems = 0;
//   let result = 0;

//   for (let i = 0; i < scores.length; i++) {
//     sum = sum + scores[i];
//   }

//   for (let i = 0; i < scores.length; i++) {
//     sumItems++;
//   }
//     return result = sum / sumItems;
// }

// console.log(getAverage([92, 88, 12, 77, 57, 100, 67, 38, 97, 89]));
// console.log(getAverage([45, 87, 98, 100, 86, 94, 67, 88, 94, 95]));

// -------------------------------------------------------------
// üíö Review JavaScript Fundamentals by Building a Gradebook App üíö
// -------------------------------------------------------------

// –¢–µ–ø–µ—Ä—å —É—á–∏—Ç–µ–ª—é –Ω—É–∂–Ω–∞ –≤–∞—à–∞ –ø–æ–º–æ—â—å –≤ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –æ—Ü–µ–Ω–∫–∏ —É—á–µ–Ω–∏–∫–∞ –≤ –±—É–∫–≤–µ–Ω–Ω—É—é –æ—Ü–µ–Ω–∫—É.

// –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é getGrade, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —á–∏—Å–ª–æ–≤–æ–π –±–∞–ª–ª. –í–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â—É—é –±—É–∫–≤–µ–Ω–Ω—É—é –æ—Ü–µ–Ω–∫—É, –æ—Å–Ω–æ–≤–∞–Ω–Ω—É—é –Ω–∞ –±–∞–ª–ª–∞—Ö.

// –í–æ—Ç –±–∞–ª–ª—ã –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–º –±—É–∫–≤–µ–Ω–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏:

// –í—Å–ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã —É–∑–Ω–∞–ª–∏ –æ–± —É—Å–ª–æ–≤–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞—Ö (if, else if –∏ else).
// –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã –∏–∑—É—á–∞–ª–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (>, <, >=, <=, ===).

// ‚úÖ
function getGrade(score) {
  if (score >= 0 && score <= 59) {
    return "F";
  } else if (score >= 50 && score <= 69) {
    return "D";
  } else if (score >= 70 && score <= 79) {
    return "C";
  } else if (score >= 80 && score <= 89) {
    return "B";
  } else if (score >= 90 && score <= 99) {
    return "A";
  } else if (score == 100) {
    return "A++";
  } else return "Inner number 0-100";
}

// -------------------------------------------------------------
// üíö Review JavaScript Fundamentals by Building a Gradebook App üíö
// -------------------------------------------------------------

// –£—á–∏—Ç–µ–ª—è –æ—á–µ–Ω—å –¥–æ–≤–æ–ª—å–Ω—ã –ø—Ä–æ–≥—Ä–∞–º–º–æ–π, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–æ–∑–¥–∞–ª–∏ –¥–æ —Å–∏—Ö –ø–æ—Ä. –ù–æ —Ç–µ–ø–µ—Ä—å –æ–Ω–∏ —Ö–æ—Ç—è—Ç –∏–º–µ—Ç—å –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —É —É—á–µ–Ω–∏–∫–∞ –ø—Ä–æ—Ö–æ–¥–Ω–∞—è –æ—Ü–µ–Ω–∫–∞. –ü—Ä–æ—Ö–æ–¥–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ - —ç—Ç–æ –ª—é–±–∞—è –æ—Ü–µ–Ω–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è ¬´F¬ª.

// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é hasPassingGrade, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –æ—Ü–µ–Ω–∫—É —Å—Ç—É–¥–µ–Ω—Ç–∞. –í–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å true, –µ—Å–ª–∏ —É —Å—Ç—É–¥–µ–Ω—Ç–∞ –µ—Å—Ç—å –ø—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª–ª, –∏ false, –µ—Å–ª–∏ –Ω–µ—Ç.

// –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é getGrade, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ü–µ–Ω–∫—É —É—á–µ–Ω–∏–∫–∞. –ó–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–∞ –æ—Ü–µ–Ω–∫–∞ –ø—Ä–æ—Ö–æ–¥–Ω–æ–π –∏–ª–∏ –Ω–µ—Ç.

// ‚úÖ
function hasPassingGrade(score) {
  const result = getGrade(score);

  if (result === "F") {
    return false;
  } else if (result !== "F") {
    return true;
  }
}


console.log(hasPassingGrade(99));
console.log(hasPassingGrade(53));
console.log(hasPassingGrade(87));

// -------------------------------------------------------------
// üíö Review JavaScript Fundamentals by Building a Gradebook App üíö
// -------------------------------------------------------------

// –¢–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ —É —É—á–∏—Ç–µ–ª—è –µ—Å—Ç—å –≤—Å—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –æ–Ω —Ö–æ—á–µ—Ç –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É—á–µ–Ω–∏–∫—É —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏. –î–æ–ø–æ–ª–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é studentMsg –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ totalScores –∏ studentScore. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â—É—é —Å–æ–æ–±—â–µ–Ω–∏–µ —É—á–µ–Ω–∏–∫—É. –ï—Å–ª–∏ —É—á–µ–Ω–∏–∫ –ø—Ä–æ—à–µ–ª –∫—É—Ä—Å, —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Ñ–æ—Ä–º–∞—Ç:

// Class average: average-goes-here. Your grade: grade-goes-here. You passed the course.

// –ï—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç –ø—Ä–æ–≤–∞–ª–∏–ª –∫—É—Ä—Å, —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Ñ–æ—Ä–º–∞—Ç:

// Class average: average-goes-here. Your grade: grade-goes-here. You failed the course.
// –ó–∞–º–µ–Ω–∏—Ç—å average-goes-here –Ω–∞ —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Å–µ—Ö –±–∞–ª–ª–æ–≤. 
// –ó–∞–º–µ–Ω–∏—Ç—å grade - goes - here –Ω–∞ –æ—Ü–µ–Ω–∫—É —Å—Ç—É–¥–µ–Ω—Ç–∞.

// –°–æ–≤–µ—Ç—ã:
// –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é getAverage, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –ø–æ –∫–ª–∞—Å—Å—É.
// –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é getGrade, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ü–µ–Ω–∫—É —É—á–µ–Ω–∏–∫–∞.
// –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—é —Å—Ç—Ä–æ–∫(+) –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è.
// –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã —Å –ø—É–Ω–∫—Ç—É–∞—Ü–∏–µ–π –∏ –ø—Ä–æ–±–µ–ª–∞–º–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.

function studentMsg(totalScores, studentScore) {
  const 
}
console.log(studentMsg([92, 88, 12, 77, 57, 100, 67, 38, 97, 89], 37));

// -------------------------------------------------------------
// üíö Review JavaScript Fundamentals by Building a Gradebook App üíö
// -------------------------------------------------------------

// Bob needs a fast way to calculate the volume of a cuboid with three values: the length, width and height of the cuboid. Write a function to help Bob with this calculation.
// –ë–æ–±—É –Ω—É–∂–µ–Ω –±—ã—Å—Ç—Ä—ã–π —Å–ø–æ—Å–æ–± –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –æ–±—ä–µ–º–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ –ø–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥–∞ —Å —Ç—Ä–µ–º—è –∑–Ω–∞—á–µ–Ω–∏—è–º–∏: –¥–ª–∏–Ω–æ–π, —à–∏—Ä–∏–Ω–æ–π –∏ –≤—ã—Å–æ—Ç–æ–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ –ø–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥–∞. –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –ë–æ–±—É —Å —ç—Ç–∏–º –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ–º.

class Kata {
  static getVolumeOfCuboid(length, width, height) {
    return length * width * height
  }
}

// -------------------------------------------------------------
// üíö CodeWars  üíö
// -------------------------------------------------------------

// –î–∞–Ω–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª, –≤–µ—Ä–Ω—É—Ç—å –∞–¥–¥–∏—Ç–∏–≤–Ω–æ–µ –æ–±—Ä–∞—Ç–Ω–æ–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ. –ö–∞–∂–¥–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º, –∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º.
// [1, 2, 3, 4, 5] --> [-1, -2, -3, -4, -5]
// [1, -2, 3, -4, 5] --> [-1, 2, -3, 4, -5]
// [] --> []

const num = [1, 6, 100, 4, 5]

function invert(array) {
  let result = [];
  for (let i = 0; i < array.length; i++) {
    result.push(array[i] - array[i] - array[i])
  }
  return result
}

console.log(invert([1, 6, 100, 4, 5]));
  

// -------------------------------------------------------------
// üíö –û—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ: –¥–∞–Ω–æ —á–∏—Å–ª–æ (—Ü–µ–ª–æ–µ / –¥–µ—Å—è—Ç–∏—á–Ω–æ–µ / –∏ —Ç–æ, –∏ –¥—Ä—É–≥–æ–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞), –Ω–∞–π—Ç–∏ –µ–≥–æ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ—Å—Ç—å (–∞–¥–¥–∏—Ç–∏–≤–Ω–æ–µ –æ–±—Ä–∞—Ç–Ω–æ–µ —á–∏—Å–ª–æ).
// -------------------------------------------------------------

function opposite(number) {
  return number - number - number
}